{% comment %}
  Renders cart drawer

  Usage:
  {% render 'cart-drawer' %}
{% endcomment %}

{{ 'quantity-popover.css' | asset_url | stylesheet_tag }}
{{ 'component-card.css' | asset_url | stylesheet_tag }}

   <script>
    {% if settings.show_recomendation != false %}
                if (!customElements.get('product-up-sale')) {
                class ProductUpSale extends HTMLElement {
                  constructor() {
                  super();
                  this.cartManager = new CartManager('.drawer .inner button');
                  }
                }
                // Define the custom element
                customElements.define('product-up-sale', ProductUpSale);
                }

                class CartManager {
                constructor(buttonSelector) {
                  this.productButtons = document.querySelectorAll(buttonSelector);
                  this.init();
                }
              
                // Initialize event listeners
                init() {
                  this.productButtons.forEach((button) => {
                  button.addEventListener('click', (event) => {
                  this.handleAddToCart(event, button)
                  console.log(' button clicked')
                  });
              
                  });
                  const loader = document.querySelector('.loader');
                  const content = document.querySelector('.recomendation');
                  if (loader) {
                  loader.classList.add("loading");
                  loader.classList.remove("hide");  
                  setTimeout(() => {
                    loader.classList.remove("loading");  
                    loader.classList.add("hide");      
                  }, 2000); // Simulating loading time
                  } else {
                  console.warn('Loader element not found.');
                  }
                }
              
                // Handle the Add to Cart button click
                handleAddToCart(event, button) {
                  event.preventDefault();
              
                  const productId = button.getAttribute('data-id');
                  console.log(productId)
                  if (!productId) {
                  console.log('Product ID not found!');
                  return;
                  }
              
                  const formData = {
                  items: [
                    {
                    id: parseInt(productId, 10), // Convert the ID to an integer
                    quantity: 1, // Default quantity set to 1
                    },
                  ],
                  sections: 'cart-drawer,main-cart-items,cart-icon-bubble,cart-live-region-text,cart-footer',
                  };
              
                  this.addToCart(formData);
                }
              
                // Send the add-to-cart request
                async addToCart(formData) {
                  try {
                  const response = await fetch(window.Shopify.routes.root + 'cart/add.js', {
                    method: 'POST',
                    headers: {
                    'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(formData),
                  });
              
                  if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                  }
              
                  const data = await response.json();
                  
                  console.log('Product added to cart:', data);
                  this.updateCartUI(data);
                  } catch (error) {
                  console.error('Error adding product to cart:', error);
                  }
                }
              
                // Update the cart UI dynamically
                updateCartUI(cartData) {
                  try {
                  const parser = new DOMParser();
              
                  // Update the cart icon bubble
                  const newCartIconBubble = this.parseHTML(cartData.sections['cart-icon-bubble'], '.cart-count-bubble');
                  const currentCartIconBubble = document.querySelector('.cart-count-bubble');
                  if (newCartIconBubble && currentCartIconBubble) {
                    currentCartIconBubble.innerHTML = newCartIconBubble.innerHTML;
                  }
              
                
                  const finalDoc = new DOMParser().parseFromString(cartData.sections['cart-drawer'], 'text/html');
                  const cartItemsContainer = finalDoc.querySelector('.cart-items');
                  if (cartItemsContainer) {
                  console.log('Updating cart items container');
                  const currentCartItemsContainer = document.querySelector('.cart-items');
                  if (currentCartItemsContainer) {
                    currentCartItemsContainer.innerHTML = cartItemsContainer.innerHTML;
                  }
                  }
                   
                  const newValue = this.parseHTML(cartData.sections['cart-drawer'], '.totals__total-value');
                  const currentValue = document.querySelector('.totals__total-value');
                  if (newValue && currentValue) {
                  currentValue.innerHTML = newValue.innerHTML;
                  }
                  } catch (error) {
                  console.error('Error updating the cart UI:', error);
                  }
                }
              
                // Helper method to parse HTML and extract a specific element
                parseHTML(htmlString, selector) {
                  const doc = new DOMParser().parseFromString(htmlString, 'text/html');
                  return doc.querySelector(selector);
                }
                }
              
                // Define the custom element
             {% comment %} customElements.define('product-up-sale', ProductUpSale);  {% endcomment %}

            {% endif %}

            {% assign current = settings.offer_product.selected_or_first_available_variant %}
                {% if current != blank %}
                  
            

         
              document.addEventListener('DOMContentLoaded', function () {
                const cartDrawerCheckout = document.querySelector('#CartDrawer-Checkout');
                if (cartDrawerCheckout) {
                cartDrawerCheckout.addEventListener('click', function (event) {
                  event.preventDefault();
                  const shippingProtectionDiv = document.querySelector('.shipping-protection');
                  const checkoutLoading = document.querySelector('.checkout-loading');
                  if (checkoutLoading) {
                    checkoutLoading.classList.remove('hide');
                    checkoutLoading.classList.add('loading');
                  }
                  if (shippingProtectionDiv) {
                  const checkbox = shippingProtectionDiv.querySelector('input[type="checkbox"]');
                  if (checkbox) {
                    if (checkbox.checked) {
                    console.log('Item is checked');
                    {% assign current = settings.offer_product.selected_or_first_available_variant %}
          
                    fetch('{{ routes.cart_add_url }}', {
                      method: 'POST',
                      headers: {
                      'Content-Type': 'application/json',
                      'X-Requested-With': 'XMLHttpRequest'
                      },
                      body: JSON.stringify({
                      id: '{{ current.id }}',
                      quantity: 1
                      })
                    })
                    .then(response => {
                      if (response.ok) {
                      console.log('Item added to cart successfully');
                 location.href = '/checkout'; // Forward to checkout on success 
                      } else {
                      console.error('Failed to add item to cart');
                      location.href = '/checkout'; // Forward to checkout on failure
                      }
                    })
                    .catch(error => {
                      console.error('Error:', error);
                      location.href = '/checkout'; // Forward to checkout on error
                    });
                    } else {
                    console.log('Item is not checked');
                    location.href = '/checkout'; // Forward to checkout if not checked
                    }
                  } else {
                    console.log('Checkbox not found');
                    location.href = '/checkout'; // Forward to checkout if checkbox not found
                  }
                  } else {
                  console.log('Shipping protection div not found');
                  location.href = '/checkout'; // Forward to checkout if div not found
                  }
                });
                }
              });
            {% endif %}
            </script>

     
              
      
<script src="{{ 'cart.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'quantity-popover.js' | asset_url }}" defer="defer"></script>

<style>

    .checkout-loading.loading .loading-spinner {
      display: block;
      position: relative;
      top: 37%;
  }
  
  
  .checkout-loading.loading {
  
    transform: scale(1.04);
  }

  .drawer {
    visibility: hidden;
  }
  .drawer__heading {
    color: rgb(33, 37, 41);
    font-family: "Barlow", sans-serif;
    font-size: 25.9px;
    font-style: normal;
    font-weight: 700;
    line-height: 43.88px;
    letter-spacing: 0.69px;
  }
  .step-1 img{
    width: 25px;
  }
  {% if settings.step_2 == false %}
    .step-wrapper {
      left: auto;
      right: 25px;
    }
    .progress-bar-text {
      justify-content: end;
    }
  {% endif %}
  {% if settings.step_1 == false %}
    .progress-bar-text {
      justify-content: end;
    }
  {% endif %}
</style>

<cart-drawer class="drawer{% if cart == empty %} is-empty{% endif %}"> 

  <div id="CartDrawer" class="cart-drawer">
    <div id="CartDrawer-Overlay" class="cart-drawer__overlay"></div>    
    <div
      class="drawer__inner gradient color-{{ settings.cart_color_scheme }}"
      role="dialog"
      aria-modal="true"
      aria-label="{{ 'sections.cart.title' | t }}"
      tabindex="-1"
    >
      {%- if cart == empty -%}
        <div class="drawer__inner-empty">
          <div class="cart-drawer__warnings center{% if settings.cart_drawer_collection != blank %} cart-drawer__warnings--has-collection{% endif %}">
            <div class="cart-drawer__empty-content">
              <h2 class="cart__empty-text">{{ 'sections.cart.empty' | t }}</h2>             
              <a href="{{ routes.all_products_collection_url }}" class="button">
                {{ 'general.continue_shopping' | t }}
              </a>

              {%- if shop.customer_accounts_enabled and customer == null -%}
                <p class="cart__login-title h3">{{ 'sections.cart.login.title' | t }}</p>
                <p class="cart__login-paragraph">
                  {{ 'sections.cart.login.paragraph_html' | t: link: routes.account_login_url }}
                </p>
              {%- endif -%}
            </div>
          </div>
          <button
          class="drawer__close"
          type="button"
          onclick="this.closest('cart-drawer').close()"
          aria-label="{{ 'accessibility.close' | t }}"
        >
          <span class="svg-wrapper">
            {%  render 'cart-close-svg' %}
          </span>
          </button>
          {%- if settings.cart_drawer_collection != blank -%}
            <div class="cart-drawer__collection">
              {% render 'card-collection', card_collection: settings.cart_drawer_collection, columns: 1 %}
            </div>
          {%- endif -%}
        </div>
      {%- endif -%}
      <div class="drawer__header">
        <h2 class="drawer__heading">{{ 'sections.cart.title' | t }} &#8226; {{ cart.item_count }}</h2>
        {%- if cart != empty -%}
          <button
            class="drawer__close"
            type="button"
            onclick="this.closest('cart-drawer').close()"
            aria-label="{{ 'accessibility.close' | t }}"
          >
            <span class="svg-wrapper">
              {%  render 'cart-close-svg' %}
            </span>
          </button>
        {% endif %}
      </div>

      {%- if cart != empty -%}
        {% if settings.show_offer_image != false %}
          {% if settings.cart_offer_image != blank %}
          <div class="offer-image">
            <img src="{{ settings.cart_offer_image |  img_url: 'master' }}" alt="image">
          </div>
          {% endif %}
        {% endif %}
        {% if settings.show_offer_text != false %}
          <div class="offer-text">
            {% assign annoucelimite = settings.annoucetext %}
            <p class="offer-free-shiping">{{ settings.free_shiping }}</p>
            <p class="offer-free-upgrade {% if cart.total_price >= annoucelimite  %}text-hide{% endif %}">{{ settings.free_upgrade }}</p>
            <p class="offer-free-unlocked {% if cart.total_price <= annoucelimite %}text-hide{% endif %}">{{ settings.free_unlocked }}</p>
          </div> 

        {% endif %}
        {% if settings.show_progress != false %}
  


         {% assign cart_total_amount = cart.total_price | divided_by: 100 %}
         {% assign cart_price  = settings.cart_amount | plus: 0 %}        
       
          <div class="offer-progress-bar">
            <div class="progress-bar {% if cart_total_amount > cart_price %}progress-compleate{% endif %}">
              <div class="progress-fill"></div>
              {% if settings.step_1 != false %}
                <div class="step-wrapper ">
                  <div class="step step-1">
                    {% if settings.step1_img != blank  %}
                      <img src="{{ settings.step1_img |  img_url: 'master' }}"  alt="image">   
                    {%  else %}
                      {%- render 'truck-svg' -%}
                    {% endif %}
                  </div>             
                </div>
              {% endif %}
              {% if settings.step_2 != false %}
                <div class="step-wrapper2">
                  <div class="step step-2">
                    <img src="{{ settings.prog_free_product |  img_url: 'master' }}" alt="image">               
                  </div>             
                </div> 
              {% endif %}
            </div>
            <div class="progress-bar-text">
              {% if settings.step_1 != false %}
                <p>{{ settings.step1_text }}</p>
              {% endif %}
              {% if settings.step_2 != false %}
                <p>{{ settings.step2_text }}</p>
              {% endif %}
            </div>                            
          </div>
        {% endif %}
      {% endif %}
      <cart-drawer-items
        {% if cart == empty %}
          class=" is-empty"
        {% endif %}
      >
        <form
          action="{{ routes.cart_url }}"
          id="CartDrawer-Form"
          class="cart__contents cart-drawer__form"
          method="post"
        >
          <div id="CartDrawer-CartItems" class="drawer__contents js-contents">
            {%- if cart != empty -%}
              <div class="drawer__cart-items-wrapper">
                <table class="cart-items" role="table">
                  <thead role="rowgroup">
                    <tr role="row">
                      <th id="CartDrawer-ColumnProductImage" role="columnheader">
                        <span class="visually-hidden">{{ 'sections.cart.headings.image' | t }}</span>
                      </th>
                      <th
                        id="CartDrawer-ColumnProduct"
                        class="caption-with-letter-spacing"
                        scope="col"
                        role="columnheader"
                      >
                        {{ 'sections.cart.headings.product' | t }}
                      </th>
                      <th
                        id="CartDrawer-ColumnTotal"
                        class="right caption-with-letter-spacing"
                        scope="col"
                        role="columnheader"
                      >
                        {{ 'sections.cart.headings.total' | t }}
                      </th>
                      <th id="CartDrawer-ColumnQuantity" role="columnheader">
                        <span class="visually-hidden">{{ 'sections.cart.headings.quantity' | t }}</span>
                      </th>
                    </tr>
                  </thead>

                  <tbody role="rowgroup">
                    {%- for item in cart.items -%}
                      <tr id="CartDrawer-Item-{{ item.index | plus: 1 }}" class="cart-item" role="row" data-id="{{ item.variant_id }}">
                        <td class="cart-item__media" role="cell" headers="CartDrawer-ColumnProductImage">
                          {% if item.image %}
                            {% comment %} Leave empty space due to a:empty CSS display: none rule {% endcomment %}
                            <a href="{{ item.url }}" class="cart-item__link" tabindex="-1" aria-hidden="true"> </a>
                            <img
                              class="cart-item__image"
                              src="{{ item.image | image_url: width: 300 }}"
                              alt="{{ item.image.alt | escape }}"
                              loading="lazy"
                              width="150"
                              height="{{ 150 | divided_by: item.image.aspect_ratio | ceil }}"
                            >
                          {% endif %}
                        </td>

                        <td class="cart-item__details" role="cell" headers="CartDrawer-ColumnProduct">
                          {%- if settings.show_vendor -%}
                            <p class="caption-with-letter-spacing light">{{ item.product.vendor }}</p>
                          {%- endif -%}

                          <a href="{{ item.url }}" class="cart-item__name h4 break">
                            {{- item.product.title | escape -}}
                          </a>

                          {%- if item.original_price != item.final_price -%}
                            <div class="cart-item__discounted-prices">
                              <span class="visually-hidden">
                                {{ 'products.product.price.regular_price' | t }}
                              </span>
                              <s class="cart-item__old-price product-option">
                                {{- item.original_price | money -}}
                              </s>
                              <span class="visually-hidden">
                                {{ 'products.product.price.sale_price' | t }}
                              </span>
                              <strong class="cart-item__final-price product-option">
                                {{ item.final_price | money }}
                              </strong>
                            </div>
                          {%- else -%}
                            <div class="product-option">
                              {{ item.original_price | money }}
                            </div>
                          {%- endif -%}

                          {%- if item.product.has_only_default_variant == false
                            or item.properties.size != 0
                            or item.selling_plan_allocation != null
                          -%}
                            {% comment %} <dl>
                              {%- if item.product.has_only_default_variant == false -%}
                                {%- for option in item.options_with_values -%}
                                  <div class="product-option">
                                    <dt>{{ option.name }}:</dt>
                                    <dd>
                                      {{ option.value -}}
                                      {%- unless forloop.last %}, {% endunless %}
                                    </dd>
                                  </div>
                                {%- endfor -%}
                              {%- endif -%}

                              {%- for property in item.properties -%}
                                {%- assign property_first_char = property.first | slice: 0 -%}
                                {%- if property.last != blank and property_first_char != '_' -%}
                                  <div class="product-option">
                                    <dt>{{ property.first }}:</dt>
                                    <dd>
                                      {%- if property.last contains '/uploads/' -%}
                                        <a
                                          href="{{ property.last }}"
                                          class="link"
                                          target="_blank"
                                          aria-describedby="a11y-new-window-message"
                                        >
                                          {{ property.last | split: '/' | last }}
                                        </a>
                                      {%- else -%}
                                        {{ property.last }}
                                      {%- endif -%}
                                    </dd>
                                  </div>
                                {%- endif -%}
                              {%- endfor -%}
                            </dl> {% endcomment %}

                            <p class="product-option">{{ item.selling_plan_allocation.selling_plan.name }}</p>
                          {%- endif -%}
                          <quantity-popover>
                            <div class="cart-item__quantity-wrapper quantity-popover-wrapper">
                              <div class="quantity-popover-container{% if has_qty_rules or has_vol_pricing %} quantity-popover-container--hover{% endif %}">
                                <quantity-input class="quantity cart-quantity mrk">
                                  <button class="quantity__button" name="minus" type="button">
                                    <span class="visually-hidden">
                                      {{-
                                        'products.product.quantity.decrease'
                                        | t: product: item.product.title
                                        | escape
                                      -}}
                                    </span>
                                    <span class="svg-wrapper">
                                      {{- 'icon-minus.svg' | inline_asset_content -}}
                                    </span>
                                  </button>
                                  <input
                                    class="quantity__input"
                                    type="number"
                                    data-quantity-variant-id="{{ item.variant.id }}"
                                    name="updates[]"
                                    value="{{ item.quantity }}"
                                    {% # theme-check-disable %}
                                    data-cart-quantity="{{ cart | item_count_for_variant: item.variant.id }}"
                                    min="0"
                                    data-min="{{ item.variant.quantity_rule.min }}"
                                    {% if item.variant.quantity_rule.max != null %}
                                      max="{{ item.variant.quantity_rule.max }}"
                                    {% endif %}
                                    step="{{ item.variant.quantity_rule.increment }}"
                                    {% # theme-check-enable %}
                                    aria-label="{{ 'products.product.quantity.input_label' | t: product: item.product.title | escape }}"
                                    id="Drawer-quantity-{{ item.index | plus: 1 }}"
                                    data-index="{{ item.index | plus: 1 }}"
                                  >
                                  <button class="quantity__button" name="plus" type="button">
                                    <span class="visually-hidden">
                                      {{-
                                        'products.product.quantity.increase'
                                        | t: product: item.product.title
                                        | escape
                                      -}}
                                    </span>
                                    <span class="svg-wrapper">
                                      {{- 'icon-plus.svg' | inline_asset_content -}}
                                    </span>
                                  </button>
                                </quantity-input>
                              </div>                              
                            </div>
                            {%- if has_qty_rules or has_vol_pricing -%}
                              <button
                                type="button"
                                class="quantity-popover__info-button quantity-popover__info-button--icon-with-label button button--tertiary"
                                aria-expanded="false"
                              >
                                <span class="svg-wrapper">
                                  {{- 'icon-info.svg' | inline_asset_content -}}
                                </span>
                                <span>
                                  {%- if has_vol_pricing -%}
                                    {{ 'products.product.volume_pricing.note' | t }}
                                  {%- elsif has_qty_rules -%}
                                    {{ 'products.product.quantity.note' | t }}
                                  {%- endif -%}
                                </span>
                              </button>
                            {%- endif -%}
                            {%- if has_vol_pricing or has_qty_rules -%}
                              <div
                                class="cart-items__info global-settings-popup quantity-popover__info"
                                tabindex="-1"
                                hidden
                              >
                                {%- if has_qty_rules == false -%}
                                  <span class="volume-pricing-label caption">
                                    {{- 'products.product.volume_pricing.title' | t -}}
                                  </span>
                                {%- endif -%}
                                <div class="quantity__rules caption">
                                  {%- if item.variant.quantity_rule.increment > 1 -%}
                                    <span class="divider">
                                      {{-
                                        'products.product.quantity.multiples_of'
                                        | t: quantity: item.variant.quantity_rule.increment
                                      -}}
                                    </span>
                                  {%- endif -%}
                                  {%- if item.variant.quantity_rule.min > 1 -%}
                                    <span class="divider">
                                      {{-
                                        'products.product.quantity.min_of'
                                        | t: quantity: item.variant.quantity_rule.min
                                      -}}
                                    </span>
                                  {%- endif -%}
                                  {%- if item.variant.quantity_rule.max != null -%}
                                    <span class="divider">
                                      {{-
                                        'products.product.quantity.max_of'
                                        | t: quantity: item.variant.quantity_rule.max
                                      -}}
                                    </span>
                                  {%- endif -%}
                                </div>
                                <button
                                  class="button-close button button--tertiary"
                                  type="button"
                                  aria-label="{{ 'accessibility.close' | t }}"
                                >
                                  <span class="svg-wrapper">
                                    {{- 'icon-close.svg' | inline_asset_content -}}
                                  </span>
                                </button>
                                {%- if item.variant.quantity_price_breaks.size > 0 -%}
                                  <volume-pricing class="parent-display">
                                    <ul class="list-unstyled">
                                      <li>
                                        <span>{{ item.variant.quantity_rule.min }}+</span>
                                        <span>{{ item.variant.price | money_with_currency }}/ea</span>
                                      </li>
                                      {%- for price_break in item.variant.quantity_price_breaks -%}
                                        <li>
                                          <span>
                                            {{- price_break.minimum_quantity -}}
                                            <span aria-hidden="true">+</span></span
                                          >
                                          <span>{{ price_break.price | money_with_currency }}/ea</span>
                                        </li>
                                      {%- endfor -%}
                                    </ul>
                                  </volume-pricing>
                                {%- endif -%}
                              </div>
                            {%- endif -%}
                            <div
                              id="CartDrawer-LineItemError-{{ item.index | plus: 1 }}"
                              class="cart-item__error"
                              role="alert"
                            >
                              <small class="cart-item__error-text"></small>
                              <span class="svg-wrapper">
                                {{- 'icon-error.svg' | inline_asset_content -}}
                              </span>
                            </div>
                          </quantity-popover>
                        </td>

                        <td class="cart-item__totals right" role="cell" headers="CartDrawer-ColumnTotal">
                         
                          {%- render 'loading-spinner' -%}
                          <div class="cart-item__price-wrapper">
                            <cart-remove-button
                            id="CartDrawer-Remove-{{ item.index | plus: 1 }}"
                            data-index="{{ item.index | plus: 1 }}"
                          >
                            <button
                              type="button"
                              class="button button--tertiary cart-remove-button"
                              aria-label="{{ 'sections.cart.remove_title' | t: title: item.title | escape }}"
                              data-variant-id="{{ item.variant.id }}"
                            >
                              <span class="svg-wrapper">
                                {{- 'icon-remove.svg' | inline_asset_content -}}
                              </span>
                            </button>
                          </cart-remove-button>
                            {%- if item.original_line_price != item.final_line_price -%}
                              <div class="cart-item__discounted-prices">
                                <span class="visually-hidden">
                                  {{ 'products.product.price.regular_price' | t }}
                                </span>
                                <s class="cart-item__old-price price price--end">
                                  {{ item.original_line_price | money }}
                                </s>
                                <span class="visually-hidden">
                                  {{ 'products.product.price.sale_price' | t }}
                                </span>
                                <span class="price price--end">
                                  {{ item.final_line_price | money }}
                                </span>
                              </div>
                            {%- else -%}
                              <span class="price price--end">
                                {{ item.original_line_price | money }}
                              </span>
                            {%- endif -%}
                              <!-- Save Amount -->
                              <div class="cart-item__save-amount">  
                            


                                <span class="save-tag">(
                                  
                                  {{ settings.save }} 

                                  {% assign handle = item.product.handle %}
                                  {% assign product_upsell = all_products[handle] %}
                                  
                                  {% assign compare_price = product_upsell.compare_at_price %}
                                  {% assign final_price = item.original_line_price %}
                                  
                 
                                  {% assign savings = compare_price | minus: final_price %}
                                  {% if savings > 0 %}

                                  {{ savings | money }}
                                  {% else %}
                                    {{ item.original_line_price | minus: item.final_line_price | money }}
                                  {% endif %}


                                )</span>
                              </div>
                              <ul
                              class="discounts list-unstyled"
                              role="list"
                              aria-label="{{ 'customer.order.discount' | t }}"
                            >
                              {%- for discount in item.line_level_discount_allocations -%}
                                <li class="discounts__discount">
                                  {{- 'icon-discount.svg' | inline_asset_content -}}
                                  {{ discount.discount_application.title }}
                                </li>
                              {%- endfor -%}
                            </ul>
                            {%- if item.variant.available and item.unit_price_measurement -%}
                              <div class="unit-price caption">
                                <span class="visually-hidden">{{ 'products.product.price.unit_price' | t }}</span>
                                {{ item.unit_price | money }}
                                <span aria-hidden="true">/</span>
                                <span class="visually-hidden"
                                  >&nbsp;{{ 'accessibility.unit_price_separator' | t }}&nbsp;</span
                                >
                                {%- if item.unit_price_measurement.reference_value != 1 -%}
                                  {{- item.unit_price_measurement.reference_value -}}
                                {%- endif -%}
                                {{ item.unit_price_measurement.reference_unit }}
                              </div>
                            {%- endif -%}
                          </div>
                        </td>
                        {%- liquid
                          assign has_qty_rules = false
                          if item.variant.quantity_rule.increment > 1 or item.variant.quantity_rule.min > 1 or item.variant.quantity_rule.max != null
                            assign has_qty_rules = true
                          endif

                          assign has_vol_pricing = false
                          if item.variant.quantity_price_breaks.size > 0
                            assign has_vol_pricing = true
                          endif
                        -%}                       
                      </tr>
                    {%- endfor -%}
                  </tbody>
                </table>
              </div>
            {%- endif -%}
            <p id="CartDrawer-LiveRegionText" class="visually-hidden" role="status"></p>
            <p id="CartDrawer-LineItemStatus" class="visually-hidden" aria-hidden="true" role="status">
              {{ 'accessibility.loading' | t }}
            </p>
          </div>
          <div id="CartDrawer-CartErrors" role="alert"></div>
        </form>        
      </cart-drawer-items>
      {%- if cart != empty -%}
        {% if settings.show_review != false %}
         <div class="cart-review">
            <div class="cart-review-text">
            <p><span>"</span>{{ settings.review_text }}<span>"</span></p>         
            </div>
            <div class="cart-ratings">
              <h3>{{ settings.review_author }}</h3>
              <span>{%- render 'mrk-ratings' -%}</span>
            </div>
          </div>
        {% endif %}
        {% if settings.show_shipping_protection != false %}
          <div class="shipping-protection">
            <div class="protection-icon">
              <img src="https://cdn.shopify.com/s/files/1/0913/4574/8264/files/Untitleddesign_38_png.png?v=1743686424" alt="icon">
            </div>
            <div class="protection-details">
              <div class="details-top">
                <h3 class="protection-title">{{ settings.prod_title }}</h3>
                <span class="protection-price">{{ settings.prod_price }}</span>
              </div>
              <p class="protection-details-text">
                {{ settings.prod_text }}
              </p>              
            </div>
            <div class="protection-switch">
              <label class="switch" >
                <input type="checkbox" checked>
                <span class="slider">
                  <svg xmlns="http://www.w3.org/2000/svg" width="11" height="11" viewBox="0 0 11 11" fill="none">
                  <path d="M9.86548 1.9624L3.3686 9.3874L0.584229 6.60303" stroke="white" stroke-width="0.928125" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
                </span>
              </label>
            </div>
          </div>
        {% endif %}
        {% if settings.show_recomendation != false %}
          {% if settings.recommended_product != blank %}
            {% assign rec_product = all_products[settings.recommended_product] %}
            {% assign selected_variant = rec_product.selected_or_first_available_variant %}

         
    
         <product-up-sale>
               
            <div class="recomendation">
              <div class="loader hide">
                <span class="loading-spinner"></span>   
              </div>   
              <h2 class="recomendation-title">{{ settings.recomendation_title }}</h2>
              <div class="recomendation-product">  
                <img class="rec_product-img" src="{{ rec_product.featured_image | image_url: width: 300 }}" alt="{{ rec_product.title }}" width="300" height="{{ 300 | divided_by: rec_product.featured_image.aspect_ratio | ceil }}">
                <div class="inner">
                  <h4>{{ rec_product.title }}</h4>
                    <!-- Price with Compare Price -->
                    {% if selected_variant.compare_at_price > selected_variant.price %}
                      <p>
                          <span class="compare-price" style="text-decoration: line-through;">
                            {{ selected_variant.compare_at_price | money }}
                          </span>
                          <span class="sale-price">
                            {{ selected_variant.price | money }}
                          </span>
                      </p>
                  {% else %}
                      <p>
                          <span class="regular-price">{{ selected_variant.price | money }}</span>
                      </p>
                  {% endif %}
                  
                <button id="cart-button" data-id="{{ selected_variant.id }}" onclick="new CartManager('.drawer .inner button').handleAddToCart(event, this)">
                  {{ settings.btn_text }}
                </button>
                </div>
              </div>                      
            </div>
        </product-up-sale>
          {% endif %}
        {% endif %}
      {% endif %}
      <div class="drawer__footer">
        {%- if settings.show_cart_note -%}
          <details id="Details-CartDrawer">
            <summary>
              <span class="summary__title">
                {{ 'sections.cart.note' | t }}
                {{- 'icon-caret.svg' | inline_asset_content -}}
              </span>
            </summary>
            <cart-note class="cart__note field">
              <label class="visually-hidden" for="CartDrawer-Note">{{ 'sections.cart.note' | t }}</label>
              <textarea
                id="CartDrawer-Note"
                class="text-area text-area--resize-vertical field__input"
                name="note"
                placeholder="{{ 'sections.cart.note' | t }}"
              >{{ cart.note }}</textarea>
            </cart-note>
          </details>
        {%- endif -%}

        <!-- Start blocks -->
        <!-- Subtotals -->

        <div class="cart-drawer__footer" {{ block.shopify_attributes }}>
          <div>
            {%- if cart.cart_level_discount_applications.size > 0 -%}
              <ul class="discounts list-unstyled" role="list" aria-label="{{ 'customer.order.discount' | t }}">
                {%- for discount in cart.cart_level_discount_applications -%}
                  <li class="discounts__discount discounts__discount--end">
                    {{- 'icon-discount.svg' | inline_asset_content -}}
                    {{ discount.title | escape }}
                    (-{{ discount.total_allocated_amount | money }})
                  </li>
                {%- endfor -%}
              </ul>
            {%- endif -%}
          </div>

          <div class="totals" role="status">
            <h2 class="totals__total">{{ 'sections.cart.estimated_total' | t }}</h2>

            <p class="totals__total-value"><del>{{ cart.original_total_price | money | remove: '.00' }}</del> <span>{{ cart.total_price | money | remove: '.00' }}</span></p>
          </div>

          
        </div>

        <!-- CTAs -->

        <div class="cart__ctas" {{ block.shopify_attributes }}>
          <button
            type="submit"
            id="CartDrawer-Checkout"
            class="cart__checkout-button button"
            name="checkout"
            form="CartDrawer-Form"
            {% if cart == empty %}
              disabled
            {% endif %}

          >
            <div class="loader   hide checkout-loading
              ">
                      <span class="loading-spinner"></span>   
                    </div>

            <style>
              .checkout-icon{
                 margin-right:7px;
              }
            </style>
            <img src="https://cdn.shopify.com/s/files/1/0913/4574/8264/files/Vector.svg?v=1743684337" alt="icon" class="checkout-icon">
            {{ 'sections.cart.checkout' | t }}
          </button>
        </div>
      </div>
      {%- if cart != empty -%}
        {% if settings.show_payment_icon != false %}
          {% if settings.cart_payment_icon != blank %}
            <div class="cart-payment-icon">
              <img src="{{ settings.cart_payment_icon |  img_url: 'master' }}" alt="payment Icon">
            </div>
          {% endif %}
        {% endif %}
      {% endif %}

    </div>
  </div>
</cart-drawer>




 

